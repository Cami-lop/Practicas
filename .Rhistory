print(temp)
promedio_temp<-(mean(temp))
if(temperatura<promedio_temp){
print(paste("El dia",dias,"del mes de Agosto la temperatura fue de",temperatura,"°C es decir debajo de la media mensual"))
}else if(temperatura>promedio_temp){
print(paste("El dia",dias,"del mes de Agosto la temperatura fue de",temperatura,"es decir por encima  de la  media mensual"))
}else if(temperatura==promedio_temp){
print(paste("El dia",dias, "del mes de Agosto la temperatura fue de",temperatura,"ºC es decir igual a la media mensual"))
}
dias<-readline("Ingrese un dia del mes de Agosto")
if((dias>=1) | (dias<=31)){
for(dia in agosto){
temperatura<-as.numeric(readline("Ingrese temperatura en °C"))
temp<-as.numeric(c(temp,temperatura))
}
}
agosto<-1:31  #dias del mes de agosto
temp<-c()
if((dias>=1) | (dias<=31)){
for(dia in agosto){
temperatura<-as.numeric(readline("Ingrese temperatura en °C"))
temp<-as.numeric(c(temp,temperatura))
}
}
#Ingreso de los dias
dia<-as.integer(readline("Ingrese un día del mes de Agosto"))
#Para que el ingreso de dias sea entre los dias reales de agosto, es decir entre el 1 y el 31
while(dia<1 | dia>31){
dia<-as.integer(readline("Ingrese un dia del mes de Agosto"))
if(dia>=1 | dia<=31){
break
}
}
#Ingreso de la temperatura
temp<-c() #defino un vector vacío para que los ingresos de valores de temperatura se vayan guardando ahí
for (i in seq(1:31)) {
t<-as.numeric(readline("Ingresela temperatura"))
temp<-c(temp,t)
}
print(temp)
#Calculo del promedio
prom<-mean(temp)
#Impresión por consola, sin las comillas
for(valor in temp){
if(valor<prom){
cat("El dia",dia,"del mes de Agosto, la temperatura fue de",temp,"°C, es decir debajo de la media mensual","\n")
} else if (valor>prom) {
cat("El dia",dia,"del mes de Agosto, la temperatura fue de", temp,"°C, es decir encima de la media mensual","\n")
} else {
cat("El dia",dia,"del mes de Agosto, la temperatura fue de",temp,"°C, es decir igual a la media mensual","\n")
}
}
#Impresión por consola, sin las comillas
for(valor in temp){
if(valor<prom){
cat("El dia",dia,"del mes de Agosto, la temperatura fue de",t,"°C, es decir debajo de la media mensual","\n")
} else if (valor>prom) {
cat("El dia",dia,"del mes de Agosto, la temperatura fue de", t,"°C, es decir encima de la media mensual","\n")
} else {
cat("El dia",dia,"del mes de Agosto, la temperatura fue de",t,"°C, es decir igual a la media mensual","\n")
}
}
dias<-readline("Ingrese un dia del mes de Agosto")
agosto<-1:31  #dias del mes de agosto
temp<-0
for(dia in agosto){
for(dia in agosto){
temperatura<-as.numeric(readline("Ingrese temperatura en °C"))
repeat{
if(is.na(temperatura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}else{
break
}
}
temp<-temp+temperatura
if (dias==dia){
temp_analisis<-temperatura
}
}
source("~/.active-rstudio-document", echo=TRUE)
getwd()   #veo donde esta mi directorio
getwd()   #veo donde esta mi directorio
setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
#a)Dado que se trata de temperaturas medias mensuales para la Ciudad de Buenos Aires, valores
#superiores a 40◦C son, muy probablemente, erroneos de acuerdo con el comportamiento climatologico de esta variable. Dise˜nar y programar un algoritmo que identifique la posici´on dentro
#de la serie de los dıas donde el valor de la temperatura media supera los 40◦C, pero que ademas
#muestre el valor del dıa anterior y del dıa siguiente. Obtener la cantidad total de elementos
#erroneos.
class(datos_temp)
posiciones_erroneas<-which(datos_temp>40)
attach(datos_temp)
dim(datos_temp)
length(posiciones_erroneas) #cdantidad de datos erroneos
valores_erroneos<-c()
for(valor in datos_temp$Temp_media){
if(valor>40){
anterior<-datos_temp[datos_temp>40]
valores_erroneos<-c(anterior,valores_erroneos)
} else{
print("Solo hay valores correctos")
}
print(posiciones_erroneas<-which(valor>40),na.rm=TRUE)
}
#valores_erroneos<-(datos_temp$Temp_media[datos_temp>40]) con esto saco los valores
valores_desp<-c()
valores_antes<-c()
for(valor in posiciones_erroneas){
valores_desp<-(datos_temp$Temp_media[datos_temp>40]-1)
valores_antes<-(datos_temp$Temp_media[datos_temp>40]+1)
valores_erroneo<-c(valores_antes,valores_desp,valores_erroneos)
}
for(valor in posiciones_erroneas){
valores_desp<-(datos_temp$Temp_media[datos_temp>40]-1)
valores_antes<-(datos_temp$Temp_media[datos_temp>40]+1)
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
valores_erroneos
posiciones_erroneas<-which(datos_temp>40)
View(datos_temp)
for(valor in datos_temp){
valores_desp<-(datos_temp$Temp_media[datos_temp>40]-1)
valores_antes<-(datos_temp$Temp_media[datos_temp>40]+1)
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
valores_erroneos
for(valor in datos_temp){
valores_desp<-(datos_temp$Temp_media[[datos_temp>40]-1])
for(valor in datos_temp){
valores_desp<-(datos_temp$Temp_media[[datos_temp>40] -1])
for(valor in datos_temp){
valores_desp<-(datos_temp$Temp_media[[datos_temp>40]])
valores_antes<-(datos_temp$Temp_media[[datos_temp>40]])
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
valores_erroneos
(datos_temp[,1][datos_temp>40])
(datos_temp[,1][datos_temp>40]-1)
fila_anterior <- datos_temp[4, ]
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_erroneos<-c(valores_antes,valores_erroneos)
}
fila_anterior <- datos_temp[, ]
print(valores_erroneos)
attach(datos_temp)
valor_error<-datos_temp$Temp_media[datos_temp>40]
valores_desp<-c()
valores_antes<-c()
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_desp<-datos_temp[valor-1]
valores_erroneos<-c(valores_antes,valor_error,valores_desp,valores_erroneos)
}
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_desp<-datos_temp[valor-1,]
valores_erroneos<-c(valores_antes,valor_error,valores_desp,valores_erroneos)
}
print(valores_erroneos)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_desp<-datos_temp[valor-1,]
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_desp<-datos_temp[valor-1,]
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
posiciones_erroneas<-which(datos_temp>40)
attach(datos_temp)
length(posiciones_erroneas) #cdantidad de datos erroneos
valores_erroneos<-c()
valores_desp<-c()
valores_antes<-c()
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor+1,]
valores_desp<-datos_temp[valor-1,]
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
View(datos_temp)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-c(valores_antes,valores_desp)
}
print(valores_erroneos)
valores_erroneos<-list()
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-list(valores_antes,valores_desp)
}
print(valores_erroneos)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-list(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
datos_temp[159-1,]
datos_temp[159+1,]
datos_temp[236-1]
datos_temp[236-1,]
datos_temp[236+1,]
datos_temp[340-1,]
datos_temp[340+1,]
valores_erroneos<-c()
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-(valores_antes,valores_desp,valores_erroneos)
for(valor in posiciones_erroneas){
valores_antes<-datos_temp[valor-1,]
valores_desp<-datos_temp[valor+1,]
valores_erroneos<-c(valores_antes,valores_desp,valores_erroneos)
}
print(valores_erroneos)
setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
attach(datos_temp)
#b)Calcular el valor maximo y el mınimo de la serie teniendo en cuenta los puntos err´oneos y sin
#tenerlos en cuenta. Calcular la cantidad total de datos faltantes. Remover los elementos faltantes
#y los erroneos de la serie de temperatura.
valor_max<-c()
valor_min<-c()
extremos<-c()
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp$Temp_media[which(datos_temp>40 && datos_temp==dato_faltante)]]<-NA
}else (valores<40){
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1][which(datos_temp>40 && datos_temp==dato_faltante)]]<-NA
}else (valores<40){
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1][which(datos_temp>40 && datos_temp==dato_faltante)]]<-NA
}else if (valores<40){
valor_max<-max(datos_temp)
valor_min<-min(datos_temp)
extremos<-c(valor_min,valor_max)
}
}
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1][which(datos_temp>40)]]<-NA
datos_temp[,1][datos_temp[,1][which(datos_temp=dato_faltante)]]<-NA
}else if (valores<40){
valor_max<-max(datos_temp)
valor_min<-min(datos_temp)
extremos<-c(valor_min,valor_max)
}
}
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1][which(datos_temp>40)]]<-NA
datos_temp[,1][datos_temp[,1][which(datos_temp==dato_faltante)]]<-NA
}else if (valores<40){
valor_max<-max(datos_temp)
valor_min<-min(datos_temp)
extremos<-c(valor_min,valor_max)
}
}
for(valores in names(datos_temp)){
if(valores >=40){
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1][which(datos_temp>40)]]<-NA
datos_temp[,1][datos_temp[,1][which(datos_temp==dato_faltante)]]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,1])
valor_min<-min(datos_temp[,1])
extremos<-c(valor_min,valor_max)
}
}
dato_faltante<- -999.0
for(valores in names(datos_temp)){
if(valores >=40){
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
for(valores in names(datos_temp)){
if(as.numeric(valores)>=40){
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
for(valores in datos_temp[,1]){
if(as.numeric(valores)>=40){
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
for(valores in datos_temp[,1]){
if(valores >=40){
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
View(datos_temp)
for(valores in datos_temp[,1]){
if(valores >40){
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
View(datos_temp)
for(valores in datos_temp[,1]){
if(valores >40){
#datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
#datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,valores][datos_temp[,valores]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
datos_temp[,1]
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
#datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
}else if (valores<40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}
}
datos_temp[,1]
View(datos_temp)
getwd()
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
View(datos_temp)
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
View(datos_temp)
datos_temp[,valores][datos_temp[,valores]>40]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
View(datos_temp)
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
#b)Calcular el valor maximo y el mınimo de la serie teniendo en cuenta los puntos err´oneos y sin
#tenerlos en cuenta. Calcular la cantidad total de datos faltantes. Remover los elementos faltantes
#y los erroneos de la serie de temperatura.
valor_max<-c()
valor_min<-c()
extremos<-c()
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,valores], na.rm = T)
valor_min<-min(datos_temp[,valores], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
datos_temp[,1]
datos_temp<-order(datos_temp$Temp_media)
datos_temp_list<-as.list(datos_temp)
View(datos_temp_list)
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
View(datos_temp)
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
View(datos_temp)
datos_temp<-order(datos_temp$Temp_media)
datos_temp
datos_temp<-order(datos_temp[,1])
datos_temp
dim(datos_temp)
#c)Ordenar la serie de menor a mayor y calcular su mediana.
data(mtcars)
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
View(datos_temp)
#c)Ordenar la serie de menor a mayor y calcular su mediana.
datos_temp[1,1]
#c)Ordenar la serie de menor a mayor y calcular su mediana.
datos_temp[,1]
datos_temp<-order(datos_temp[,1])
datos_temp_list<-as.list(datos_temp)
View(datos_temp_list)
getwd()
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
datos_temp_ordenado<-order(datos_temp$Temp_media)
datos_temp_ordenado<-df[order(datos_temp$Temp_media)]
datos_temp_ordenado<-df(order(datos_temp$Temp_media))
datos_temp_ordenado<-df(order(datos_temp$Temp_media,))
#c)Ordenar la serie de menor a mayor y calcular su mediana.
rm(list=ls())
setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/")
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
#b)Calcular el valor maximo y el mınimo de la serie teniendo en cuenta los puntos err´oneos y sin
#tenerlos en cuenta. Calcular la cantidad total de datos faltantes. Remover los elementos faltantes
#y los erroneos de la serie de temperatura.
valor_max<-c()
valor_min<-c()
extremos<-c()
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
for(valores in datos_temp[,1]){
if(as.numeric(valores) >40){
valor_max<-max(datos_temp[,1], na.rm = T)
valor_min<-min(datos_temp[,1], na.rm= T)
extremos<-c(valor_min,valor_max)
}else{
print("Error")
}
}
datos_temp_ordenado<-df(order(datos_temp$Temp_media,))
attach(datos_temp)
datos_temp_ordenado<-df[order(datos_temp$Temp_media,)]
datos_temp_list<-as.list(datos_temp)
View(datos_temp)
datos_temp_ordenado<-df[order(datos_temp$Temp_media,)]
print(datos_temp_ordenado)
#temp <-scan("datos_tmedia_SABE_2010.txt",sep="") no me corre con esta funcion
archivo<-"C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231011/datos_tmedia_SABE_2010.txt"
datos_temp<- read.table(archivo,header = TRUE, col.name="Temp_media")
dato_faltante<- -999.0
datos_temp[,1][datos_temp[,1]==dato_faltante]<-NA
datos_temp[,1][datos_temp[,1]>40]<-NA
datos_temp_ordenado<-df[order(datos_temp$Temp_media,)]
datos_temp_ordenado<-datos_temp[order(datos_temp$Temp_media,)]
datos_temp_ordenado<-datos_temp[order(datos_temp$Temp_media,),na.rm=TRUE]
#no da y deberia dar
dim(datos_temp)
