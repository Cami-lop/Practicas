install.packages("knn")
#3
install.packages("knn")
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if prob_estim>=0.5
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
clasif
}
knn(8,5.2,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
clasif
}
knn(8,5.2,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
clasif
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.62){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.62){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
#3
knn=function(k,x,datos_x,datos_y){
distancia=abs(datos_x-x)
indices=order(distancia)
prob_estim=mean(datos_y[indices[1:k]])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
knn(8,5.2,datos$Height,datos$indi)
#4
knn(8,6,datos$Height,datos$indi)
abs(datos$Height-4)<=h
abs(datos$Height-4)<=1
algo=abs(datos$Height-4)<=1
algo=(abs(datos$Height-4)<=1)
clear(algo)
delete(algo)
#3
knn=function(k,x,datos_x,datos_y){}
#3
knn=function(k,x,datos_x,datos_y){
indices=order(abs(datos_x-x))
prob_estim=mean(datos_y[indices[1:k]])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
#3
knn=function(k,x,datos_x,datos_y){
indices=order(abs(datos_x-x))
prob_estim=mean(datos_y[indices[1:k]])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
#a
knn(8,5.2,datos$Height,datos$indi)
#b
knn(8,6,datos$Height,datos$indi)
#4
mayoria=function(h,x,datos_x,datos_y){
nos=(abs(datos_x-x)<=h)
prob_estim=mean(datos_y[indices[1:k]])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#4
mayoria=function(h,x,datos_x,datos_y){
indices=(abs(datos_x-x)<=h)
prob_estim=mean(datos_y[indices]])
#4
mayoria=function(h,x,datos_x,datos_y){
indices=(abs(datos_x-x)<=h)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim)
}
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#b
mayoria(0.1,6,datos$Height,datos$indi)
#a
knn(8,5.2,datos$Height,datos$indi)
#b
knn(8,6,datos$Height,datos$indi)
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#b
mayoria(0.1,6,datos$Height,datos$indi)
#4
mayoria=function(h,x,datos_x,datos_y){
indices=(abs(datos_x-x)<=h)
vecinos=length(indices)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim,vecinos)
}
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#b
mayoria(0.1,6,datos$Height,datos$indi)
#4
mayoria=function(h,x,datos_x,datos_y){
indices=(abs(datos_x-x)<=h)
vecinos=length(indices==TRUE)
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim,vecinos)
}
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#b
mayoria(0.1,6,datos$Height,datos$indi)
#4
mayoria=function(h,x,datos_x,datos_y){
indices=(abs(datos_x-x)<=h)
vecinos=length(indices[indices==TRUE])
prob_estim=mean(datos_y[indices])
clasif=0
if (prob_estim>=0.5){
clasif=1
}
c(clasif,prob_estim,1-prob_estim,vecinos)
}
#a
mayoria(0.1,5.2,datos$Height,datos$indi)
#b
mayoria(0.1,6,datos$Height,datos$indi)
install.packages("pwr")
library(pwr)
pwr.r.test(d=0.5,power = 0.80,sig.level = 0.05)
pwr.t.test(d=0.5,power = 0.80,sig.level = 0.05)
pwr.anova.test(k=4,f=0.5,sig.level = 0.05,power = 0.80)
#Ejercicio 5
getwd()
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(tempertura,serie)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
while(is.na(temperatura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
}
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(temperatura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(temp)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
repeat{
if(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}else{
break}
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
source("~/.active-rstudio-document")
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora<-0
for(t in temperatura){
if(t=temp_max) {
for(t in temperatura){
if(t==temp_max) {
hora<-hora+3
}
}
hora
hora<-0
for(t in temperatura){
repeat{
if(t!=temp_max){
hora<-hora+3
}else{
break
}
}
}
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora<-0
for(tf in temperatura){
repeat{
if(tf!=temp_max){
hora<-hora+3
}else{
break
}
}
}
print(hora)
hora.max<-horas[which.max(temperatura)]
for(hs in horas){
repeat{
if(hs!=hora.max){
hora<-hora+3
}else{
break
}
}
}
rm(list=ls())
temperatura<-c()
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
pos.max<-which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora.max<-horas[which.max(temperatura)]
hora<-0
for(hs in horas){
repeat{
if(hs!=hora.max){
hora<-hora+3
}else{
break
}
}
}
pos.max<-which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
#Ejercicio 5
getwd()
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora.max<-horas[which.max(temperatura)]
print(paste("La temperatura maxima fue de",temp_max,"a la/s",hora.max,"hs"))
rm(list=ls())
